parameter (pair key_hash (pair (pair nat nat) (pair (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))))); storage key_hash; return unit; code { DUP ; DIP { CDR ; } ; CAR ; DUUP ; SOURCE unit unit ; MANAGER ; COMPARE ; EQ ; IF { DUP ; CAR ; AMOUNT ; DUUUP ; CDAR ; DUP ; CAR ; DUUP ; CDR ; DUUP ; LAMBDA (pair (pair (pair nat tez) tez) nat) tez { DUP ; CAR ; { @x_slash_10 } CDR ; DUUP ; CDR ; { @odd_index_slash_7 } DUUUP ; CAR ; { @x_slash_10 } CAR ; CAR ; COMPARE ; NEQ ; IF { DUUP ; CAR ; { @x_slash_10 } CAR ; CDR ; DUUP ; ADD ; } { DUP ; } ; DIP { DROP ; DROP ; } ; } ; PAIR ; DUUUUUUUP ; CDDAR ; PUSH tez "0" ; DUUP ; CDDDDDDAR ; DUUUUUUP ; GET ; IF_NONE { PUSH (list (pair key_hash (pair nat tez))) (List) ; DUUUUUUUUP ; DUUUUUUP ; PAIR ; DUUUUUUUUUUP ; PAIR ; CONS ; } { DUUUUUUUUP ; DUUUUUUP ; PAIR ; DUUUUUUUUUUP ; PAIR ; CONS ; } ; LAMBDA (pair (pair key_hash (pair nat tez)) tez) tez { PUSH nat 1000 ; DUUP ; CAR ; CDAR ; DUUUP ; CAR ; CDDR ; MUL ; EDIV ; IF_NONE { PUSH tez "0" ; } { CAR ; } ; SWAP ; CDR ; ADD ; } ; REDUCE ; PUSH tez "0" ; DUUUP ; CDDDDDAR ; ITER { DIP { DUP ; } ; PAIR ; DUUUUUP ; DUUP ; DIP { DUP ; CAR ; SWAP ; CDR ; } ; PAIR ; EXEC ; DIP { DROP ; DROP ; } ; } ; DUUUP ; CDDDAR ; CDAR ; ADD ; COMPARE ; GE ; IF { DIP { DROP ; DROP ; DROP ; DROP ; } ; DUUUUUP ; PUSH (contract (pair key_hash (pair (pair nat nat) (pair (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))))) unit ) "TZ1XMF1saUH8227ztcpxg4bxCMh4CZt3U66v"; DUUUUP ; DIIIIP { DROP ; } ; DUUUUUUP ; CDDDR ; DUUUUUP ; DIIIIIP { DROP ; } ; DIIIIIIIP { DROP ; } ; PAIR ; DUUUUUUP ; DIIIIIIP { DROP ; } ; CDAR ; PAIR ; DUUUUUP ; DIIIIIP { DROP ; } ; PAIR ; TRANSFER_TOKENS ; SWAP ; SWAP ; PAIR ; } { FAIL ; } ; } { FAIL ; } ; } 