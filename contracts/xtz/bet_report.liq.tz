parameter (pair nat (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))); storage (pair key_hash (pair nat (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez)))))))))))); return unit; code { DUP ; DIP { CDR ; } ; CAR ; DUP ; DUUUP ; DIIIP { DROP ; } ; CAR ; PAIR ; SWAP ; CDR ; PUSH tez "0" ; PUSH (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (Left Unit) ; TRANSFER_TOKENS ; NOW ; DUUP ; CDDAR ; CDDAR ; DUP ; CDR ; DUUUP ; COMPARE ; GE ; DUUP ; CAR ; DUUUUP ; COMPARE ; LT ; OR ; IF { FAIL ; } { DUUUUP ; DUP ; CDR ; SOURCE unit unit ; MANAGER ; DUUUP ; CAR ; DUUP ; COMPARE ; EQ ; IF { DUUUUUUP ; CDDDDDDDAR ; DUUP ; GET ; IF_NONE { DIIP { DROP ; DROP ; DROP ; } ; DUUP ; DUUUUUP ; DIIIIIP { DROP ; } ; CAR ; PAIR ; DUUUP ; CDR ; PUSH tez "0" ; DUUUUUUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUUUUUUUUUP ; DIIIIIIIIIIIIIIP { DROP ; } ; CDDDDDDDAR ; DUUUUUUUUUUUUUUP ; DIIIIIIIIIIIIIIP { DROP ; } ; CAR ; SOME ; DUUUUUUUUUUUUUUP ; DIIIIIIIIIIIIIIP { DROP ; } ; UPDATE ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; LEFT unit ; RIGHT unit ; TRANSFER_TOKENS ; DROP ; PUSH unit Unit ; PAIR ; } { FAIL ; } ; } { FAIL ; } ; } ; } 