parameter (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez)))))))))); storage (pair key_hash (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))); return unit; code { DUP ; DIP { CDR ; } ; CAR ; DUUP ; CAR ; SOURCE unit unit ; MANAGER ; COMPARE ; EQ ; IF { DUP ; DUUUP ; DIIIP { DROP ; } ; CAR ; PAIR ; SWAP ; PUSH tez "0" ; PUSH (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (Left Unit) ; TRANSFER_TOKENS ; DUUP ; CDR ; SWAP ; DUP ; CAR ; SWAP ; CDR ; CDR ; PUSH (or unit (or string unit)) (Right (Right Unit)) ; PAIR ; SWAP ; PAIR ; DUUP ; DUUUUP ; DIIIIP { DROP ; } ; CAR ; PAIR ; PUSH (contract (pair (map nat nat) (pair (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez)))))))))))) unit ) "TZ1dTj9Xcbnh9tDAZMrvaguJJ9599Xqf46pa"; PUSH tez "0" ; DUUUUUP ; DIIIIIP { DROP ; } ; DUUUUUP ; PAIR ; PUSH (map nat nat) (Map) ; DUUUUUUP ; DIIIIIIP { DROP ; } ; CDDDDDDDAR ; LAMBDA (pair (pair key_hash nat) (map nat nat)) (map nat nat) { DUP ; CAR ; CDR ; DUUP ; CDR ; DUP ; DUUP ; DUUUUP ; GET ; IF_NONE { PUSH nat 0 ; } {} ; DIIP { DROP ; } ; DIIIP { DROP ; } ; PUSH nat 1 ; ADD ; SOME ; DUUUP ; DIIIP { DROP ; } ; UPDATE ; } ; REDUCE ; PAIR ; TRANSFER_TOKENS ; SWAP ; SWAP ; PAIR ; } { FAIL ; } ; } 