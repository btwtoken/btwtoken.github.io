parameter (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez)))))))))); storage (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez)))))))))); return unit; code { DUP ; DIP { CDR ; } ; DIP { DROP ; } ; CAR ; DUP ; SWAP ; PUSH tez "0" ; PUSH (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (Left Unit) ; TRANSFER_TOKENS ; DUP ; CDDDAR ; CAR ; IF_NONE { PUSH bool True ; } { SOURCE unit unit ; MANAGER ; DUUP ; COMPARE ; EQ ; IF { PUSH bool True ; } { PUSH bool False ; } ; DIP { DROP ; } ; } ; IF { AMOUNT ; DUUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUP ; CDDDAR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUUP ; DUUUUUUUUUP ; CDDDAR ; CDAR ; ADD ; PAIR ; SWAP ; PAIR ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; DUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUUP ; DUUUUUUUP ; CDDDDAR ; ADD ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; DUUUUUP ; DUUUUUUP ; DUUUUUP ; DUUUUP ; CDDDAR ; CAR ; IF_NONE { DUUUUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUUUP ; CDDDAR ; CDR ; SOURCE unit unit ; MANAGER ; SOME ; PAIR ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; } { DROP ; DUUUUP ; } ; DIIIIP { DROP ; DROP ; DROP ; DROP ; DROP ; } ; LEFT unit ; RIGHT unit ; TRANSFER_TOKENS ; DROP ; PUSH unit Unit ; PAIR ; } { FAIL ; } ; } 