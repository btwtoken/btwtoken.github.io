parameter (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)); storage (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))); return (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))); code { DUP ; DIP { CDR ; } ; CAR ; DUP ; IF_LEFT { DROP ; DROP ; DUP ; SWAP ; PAIR ; } { IF_LEFT { DUUUP ; CAR ; SOURCE unit unit ; MANAGER ; COMPARE ; EQ ; IF { DUP ; DUUP ; PAIR ; } { FAIL ; } ; DIP { DROP ; DROP ; DROP ; } ; } { SOURCE unit unit ; DUP ; MANAGER ; DUUUUUP ; CDDDDDDDDR ; DUUP ; GET ; IF_NONE { FAIL ; } { DUUUUUUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; DROP ; DUUUUUUUUUUUUUUP ; CDDDDDDDDR ; PUSH (option tez) None ; DUUUUUUUUUUUUP ; UPDATE ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; DUP ; CAR ; DUUUUP ; COMPARE ; EQ ; IF { PUSH (or unit (or unit unit)) (Left Unit) ; } { PUSH (or unit (or unit unit)) (Right (Left Unit)) ; } ; IF_LEFT { DROP ; DIIP { DROP ; DROP ; DROP ; DROP ; DROP ; } ; SOURCE (or unit (or unit unit)) unit ; DUUUP ; DIIIP { DROP ; } ; PUSH (or unit (or unit unit)) (Right (Right Unit)) ; TRANSFER_TOKENS ; DROP ; DUP ; SWAP ; PAIR ; } { IF_LEFT { DROP ; DIIP { DROP ; } ; DIIIP { DROP ; DROP ; DROP ; } ; DUUUP ; DIIIP { DROP ; } ; DUUUP ; DIIIP { DROP ; } ; PUSH unit Unit ; TRANSFER_TOKENS ; DROP ; DUP ; SWAP ; PAIR ; } { FAIL ; } ; } ; } ; } ; } ; } 