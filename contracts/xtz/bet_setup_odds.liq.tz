parameter (pair (map nat nat) (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))); storage (pair (map nat nat) (contract (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))))); return unit; code { DUP ; DIP { CDR ; } ; DIP { DROP ; } ; CAR ; DUP ; SWAP ; CDR ; PUSH tez "0" ; PUSH (or unit (or (pair key_hash (pair (or unit (or string unit)) (pair (pair string (pair (pair timestamp timestamp) (pair (pair timestamp timestamp) (list string)))) (pair (pair (option key_hash) (pair tez (map nat nat))) (pair tez (pair (map nat tez) (pair (map nat (list (pair key_hash (pair nat tez)))) (pair (map key_hash nat) (map key_hash tez))))))))) unit)) (Left Unit) ; TRANSFER_TOKENS ; DUP ; CDDDAR ; CAR ; IF_NONE { FAIL ; } { SOURCE unit unit ; MANAGER ; DUUP ; COMPARE ; EQ ; IF { DUUUP ; DUUUUP ; CDR ; PUSH tez "0" ; DUUUUUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; CDR ; CDR ; DUUUUUUUUUP ; CDDDAR ; DUP ; DUP ; CAR ; SWAP ; CDR ; DUP ; CAR ; SWAP ; DROP ; DUUUUUUUUUUUUP ; CDDAR ; CDDDR ; PUSH nat 0 ; PAIR ; DUUUUUUUUUUUUUUP ; CAR ; PAIR ; PUSH (map nat nat) (Map) ; PAIR ; PUSH bool True ; LOOP { DUP ; CAR ; DUUP ; CDAR ; DUUUP ; CDDAR ; DUUUUP ; CDDDR ; DUUUP ; DUUUP ; GET ; IF_NONE { DUUUUP ; PUSH (option nat) (Some 1000) ; DUUUUP ; UPDATE ; } { DUUUUUP ; SWAP ; SOME ; DUUUUP ; UPDATE ; } ; DUUP ; IF_CONS { DUUP ; IF_CONS { DROP ; DROP ; DUUP ; PUSH nat 1 ; DUUUUUUUP ; ADD ; PAIR ; DUUUUUUUP ; PAIR ; DUUUUP ; PAIR ; PUSH bool True ; PAIR ; } { DUUUUP ; DUUUUUUP ; PAIR ; DUUUUUUUP ; PAIR ; DUUUUP ; PAIR ; PUSH bool False ; PAIR ; } ; DIP { DROP ; DROP ; } ; } { DUUP ; DUUUUP ; PAIR ; DUUUUUP ; PAIR ; DUUUUUUP ; PAIR ; PUSH bool False ; PAIR ; } ; DIP { DROP ; DROP ; DROP ; DROP ; DROP ; DROP ; } ; DUP ; CAR ; DIP { CDR ; } ; } ; DIIIP { DROP ; } ; DIIIIIIIIIIP { DROP ; DROP ; DROP ; } ; CAR ; SWAP ; PAIR ; SWAP ; PAIR ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; SWAP ; PAIR ; LEFT unit ; RIGHT unit ; TRANSFER_TOKENS ; DROP ; PUSH unit Unit ; PAIR ; } { FAIL ; } ; } ; } 